{"version":3,"sources":["history.js","components/TreeComponents/ChildrenNodes.js","components/TreeComponents/TreeNode.js","components/TreeComponents/helperComponents/TreeKey.js","components/TreeComponents/helperComponents/ScrollMessage.js","components/TreeComponents/Tree.js","components/ReusableComponents/Inputs.js","components/ReusableComponents/SelectInput.js","components/FormComponents/RenderFormChildren.js","components/ReusableComponents/Button.js","components/FormComponents/helperComponents/DemoBoxLeftPointer.js","components/FormComponents/helperComponents/DemoBoxDownPointer.js","components/FormComponents/AncestorForm.js","components/FormComponents/IconTree.js","components/FormComponents/helperComponents/WelcomeMessage.js","components/FormComponents/AncestorEnter.js","actions/createTree.js","actions/types.js","actions/getFieldValue.js","actions/getSpouseState.js","actions/cancelIntroAnimation.js","App.js","serviceWorker.js","reducers/index.js","reducers/createTree.js","reducers/cancelIntro.js","reducers/getFieldValue.js","reducers/getSpouseState.js","index.js","media/scroll_right.gif"],"names":["createBrowserHistory","ChildrenNodes","parentHeight","Arg","this","props","children","lastChild","length","noSiblings","generation","colorArray","ordinalNumerals","map","child","i","name","spouseName","label","color","key","firstChild","borderDiv2","className","hasChildren","renderChildNodes","Component","TreeNode","hideOrShowIsChildren","e","target","nextSibling","classList","toggle","iconElementClassList","isAncestor","style","height","position","onClick","TreeKey","id","ScrollMessage","window","sessionStorage","getItem","setItem","title","animationPlayState","src","scrollRightGif","alt","Tree","n","s","v","cancelSessionStorage","ancestor","type","to","process","connect","state","createTree","genPxObject","generationPxRelation","Input","propsArr","input","labelProps","meta","touched","error","autofocus","placeholder","inputClass","autoFocus","SelectInput","DemoBoxDownPointer","RenderFormChildren","fields","fieldArrayReduxProps","required","maxLength","bracketArr","match","btnName","fieldValue","value","spouseState","searchName","bool","index","Field","component","validate","inputReduxProps","onChange","event","newValue","previousValue","getFieldValue","ID","clearFields","getSpouseState","remove","FieldArray","push","disabled","valid","pristine","Button","text","DemoBoxLeftPointer","AncestorForm","undefined","max","maxLength50","submitValidation","onSubmit","handleSubmit","autoComplete","cancelIntro","reset","IconTree","WelcomeMessage","AncestorEnter","formValues","formData","enterAncestors","registeredFields","stopInstructions","cancelIntroAnimation","form","objArr","ObjConstructor","newObj","arrIterator","iterObj","generationArg","element","currentGeneration","generationCounter","mappingFn","history","payload","prevState","objConstructor","prevStateIterator","reduxForm","destroyOnUnmount","App","basename","exact","path","render","routeProps","Boolean","location","hostname","combineReducers","action","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.81d5b157.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\r\n\r\n\r\nexport default createBrowserHistory();","import React, { Component,Fragment } from 'react';\r\n//components\r\nimport TreeNode from './TreeNode';\r\n\r\nclass ChildrenNodes extends Component {\r\n\r\n    renderChildNodes(parentHeight,Arg){\r\n        if (this.props.children) {\r\n            //setting index for each last children for border styling on last child\r\n            let firstChild = 0;\r\n            let lastChild = this.props.children.length - 1;\r\n            let noSiblings = this.props.children.length === 1 ? \"noSiblings\" : null; \r\n            let generation = this.props.children[0].generation || 0; \r\n            let {colorArray,ordinalNumerals} = this.props; \r\n\r\n            return this.props.children.map((child,i) => {\r\n                if (!child.children) {\r\n                        return <TreeNode \r\n                                    name={child.name} \r\n                                    spouseName={child.spouseName}\r\n                                    label={{name:`${ordinalNumerals(i + 1)} Child`,spouseName:\"Spouse\",color:`${colorArray[generation - 1]}`}} \r\n                                    key={i} \r\n                                    //first child receives unique styling for brackets mainly\r\n                                    firstChild={i === firstChild?\"firstChild\":\"\"}\r\n                                    //middle child receives unique styling for brackets mainly\r\n                                    borderDiv2={i=== firstChild || i === lastChild? null:<div className='borderDiv2'></div>}\r\n                                    //last child receives unique styling for brackets mainly\r\n                                    lastChild={i=== lastChild?\"lastChild\":\"\"} \r\n                                    noSiblings={noSiblings?\"noSiblings\":\"\"}\r\n                                    parentHeight={30} \r\n                                    generation={generation}\r\n                                    colorArray={colorArray}\r\n                                    ordinalNumerals={ordinalNumerals}\r\n                                />\r\n                    }else if (child.children) {\r\n                            return  <TreeNode \r\n                                        name ={child.name} \r\n                                        spouseName={child.spouseName}\r\n                                        label={{name:`${ordinalNumerals(i + 1)} Child`,spouseName:\"Spouse\",color:`${colorArray[generation - 1]}`}}\r\n                                        key={i} \r\n                                        //first child receives unique styling for brackets mainly\r\n                                        firstChild={i === firstChild?\"firstChild\":\"\"}\r\n                                        //middle child receives unique styling for brackets mainly\r\n                                        borderDiv2={i=== firstChild || i === lastChild? null:<div className='borderDiv2'></div>}\r\n                                        //last child receives unique styling for brackets mainly\r\n                                        lastChild={i=== lastChild?\"lastChild\":\"\"} \r\n                                        noSiblings={noSiblings?\"noSiblings\":\"\"}\r\n                                        parentHeight={'auto'} \r\n                                        children = {child.children} \r\n                                        hasChildren = {\"hasChildren\"}\r\n                                        generation={generation}\r\n                                        colorArray={colorArray}\r\n                                        ordinalNumerals={ordinalNumerals}\r\n                                    />\r\n                        } \r\n                        return null; \r\n                    })\r\n                }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.renderChildNodes(this.props.parentHeight)}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChildrenNodes;","import React, {Component} from 'react';\r\n// import {connect} from 'react-redux';\r\nimport ChildrenNodes from './ChildrenNodes';\r\nimport '../../styles/TreeComponents/TreeNode.css';\r\n\r\nclass TreeNode extends Component {\r\n\r\n        hideOrShowIsChildren = (e) => {\r\n            let sibling = e.target.nextSibling;\r\n            let siblingClassList = sibling.classList;\r\n            siblingClassList.toggle(\"hide\")\r\n\r\n            let iconElement = e.target;\r\n            let iconElementClassList = iconElement.classList;\r\n            iconElementClassList.toggle(\"minus\");\r\n            iconElementClassList.toggle(\"plus\");\r\n        }\r\n\r\n        render() {\r\n            let {parentHeight,isAncestor,hasChildren,lastChild,borderDiv2,name,spouseName,label,noSiblings} = this.props; \r\n            return ( \r\n                <div \r\n                    style={{height:`${parentHeight}px`}} \r\n                    className = {`${isAncestor ? isAncestor:\"\"} ${hasChildren ? hasChildren: \"noChildren\"} ${isAncestor ? \"\":\"parentToBorder\"} ${lastChild? lastChild:\"\"} ${noSiblings}`} \r\n                >\r\n                    <div className=\"borderDiv\"></div>\r\n                    {borderDiv2?borderDiv2:\"\"}\r\n                    <div className=\"labelNameDiv\">\r\n                        <div className=\"childLabelDiv\">\r\n                            <div className={`ui ${label.color} horizontal label`}>{label.name}</div>\r\n                            <h4 className=\"ui blue header treeh4\">{name? name : \"loading\"}</h4> \r\n                        </div>\r\n                        {spouseName?  <div className=\"spouseLabelDiv\">\r\n                                        <div className=\"ui purple horizontal label\">{label.spouseName}</div>\r\n                                        <h4 className=\"ui blue header treeh4\">{spouseName? spouseName : \"loading\"}</h4> \r\n                                    </div> : null}\r\n\r\n                    </div>\r\n                    {hasChildren? <div style={{position:'relative'}}>\r\n                                    <i className=\"minus purple icon minimizer\" onClick={this.hideOrShowIsChildren}></i>\r\n                                    <div className=\"isChildren\"> \r\n                                        {isAncestor?null:<div className=\"pointerDiv\"></div>}\r\n                                        <ChildrenNodes {...this.props}/>\r\n                                    </div>\r\n                                    </div>\r\n                     :null}\r\n                </div >\r\n            );\r\n        }\r\n }\r\n\r\nexport default TreeNode;","import * as React from 'react';\r\n//css\r\nimport '../../../styles/TreeComponents/helperComponents/TreeKey.css';\r\n\r\nexport const TreeKey = (props) => {\r\n    return (\r\n        <div className=\"treeKey\">\r\n        <div className=\"\" id=\"keyHeader\">\r\n            <h2 className=\"ui header purple\">Key</h2>\r\n        </div>\r\n        <div className=\"ui list\">\r\n        <div className=\"item\">\r\n            <div className=\"ui two column padded grid\" id=\"keyGenerationColors\">\r\n                <div className={`item eight wide column`} id=\"itemLabelMine\">\r\n                    <h4 className=\"ui blue header\">\r\n                        Generation Colors\r\n                    </h4>\r\n                </div>\r\n                <div className=\"ui eight wide column relaxed grid\" id=\"colorSelectorMine\">\r\n                    <div className=\"row\">\r\n                        <div className={`item ${props.colorArray[0]} column`}>\r\n                        1st\r\n                        </div>\r\n                        <div className={`item ${props.colorArray[1]} column`}>\r\n                        2nd\r\n                        </div>\r\n                        <div className={`item ${props.colorArray[2]} column`}>\r\n                        3rd\r\n                        </div>\r\n                        <div className={`item ${props.colorArray[3]} column`}>\r\n                        4th\r\n                        </div>\r\n                        <div className={`item ${props.colorArray[4]} column`}>\r\n                        5th\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"item\">\r\n            <div className=\"ui two column padded grid\" id=\"keyMinimizer\">\r\n                <div className=\"item eight wide column\" id=\"itemLabelMine\">\r\n                    <h4 className=\"ui blue header\">\r\n                        Show/Hide Children\r\n                    </h4>\r\n                </div>\r\n                <div className=\"ui eight wide mobile four wide tablet column relaxed grid\" id=\"minimizerIcons\">\r\n                    <div className=\"item eight wide column\">\r\n                        <i className=\"plus purple icon\"></i>\r\n                    </div>\r\n                    <div className=\"item eight wide column\">\r\n                        <i className=\"minus purple icon\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"item\">\r\n                <div className=\"ui two column centered padded mobile only grid\">\r\n                    <div className=\"centered row\">\r\n                            <i className=\"arrow circle down huge blue icon\"></i>\r\n                    </div>\r\n                    <div className=\"centered row\">\r\n                        <h4>Scroll Down for Tree</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};","import React,{Fragment} from 'react';\r\n//css\r\nimport '../../../styles/TreeComponents/helperComponents/ScrollMessage.css';\r\n//media\r\nimport scrollRightGif from '../../../media/scroll_right.gif'\r\n\r\nexport const ScrollMessage = (props) => {\r\n    const dontShowMessage = () => {\r\n        window.sessionStorage.setItem(\"noShowMessage\",\"hide\");\r\n    }\r\n\r\n    const isDontShowValid = () => {\r\n        if(window.sessionStorage.getItem('noShowMessage') === \"hide\") return \"hide\";\r\n        else if(window.sessionStorage.getItem('noShowMessage') === \"show\") return \"\";\r\n    }\r\n\r\n    const pauseAnimationState = () => {\r\n        if(window.sessionStorage.getItem('noShowMessage') === \"hide\") return \"paused\";\r\n        else if(window.sessionStorage.getItem('noShowMessage') === \"show\") return \"running\"\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <i className={`question circle icon`} id=\"questionCircleIcon\"></i>\r\n            <div className=\"overScrollMessageDiv\"  id={isDontShowValid()}>\r\n                <i className={`close icon large`} onClick={dontShowMessage} title=\"don't show message again\"></i>\r\n                <div className={`overScrollMessage`} style={{animationPlayState:`${pauseAnimationState()}`}}>\r\n                    <div>\r\n                        <h3>Notice:</h3>\r\n                            <p>\r\n                            Some children may appear off screen, You may use the scroll right function \r\n                            located at the bottom of the page to bring them in view\r\n                            </p>\r\n                        </div>\r\n                        <img src={scrollRightGif} className=\"scrollRightGif\" alt=\"page scrolling\"/>\r\n                    </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect}from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n//css\r\nimport '../../styles/TreeComponents/Tree.css';\r\n//components\r\nimport TreeNode from './TreeNode';\r\nimport {TreeKey} from './helperComponents/TreeKey';\r\nimport {ScrollMessage} from './helperComponents/ScrollMessage';\r\n\r\n\r\nclass Tree extends Component {\r\n    //passing down for label styling for each generation\r\n    colorArray = [\"orange\",\"green\",\"teal\",\"violet\",\"olive\"];\r\n\r\n    ordinalNumerals = (n) => {\r\n        let s = [\"th\", \"st\", \"nd\", \"rd\"];\r\n        let v = n%100;\r\n       return n + (s[(v-20)%10] || s[v] || s[0]);\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"tree\">\r\n                <i className=\"play icon\" id=\"playIcon\" onClick={this.cancelSessionStorage}></i>\r\n                <h1>Family Tree</h1>\r\n                <ScrollMessage/> \r\n                <TreeKey colorArray={this.colorArray}/>\r\n                <TreeNode \r\n                    name={this.props.ancestor} \r\n                    spouseName={this.props.spouseName} \r\n                    label={{name:\"Ancestor\",spouseName:\"Spouse\",color:\"purple\"}} \r\n                    isAncestor={\"isAncestor\"} \r\n                    noSiblings={\"noSiblings\"} \r\n                    hasChildren={\"hasChildren\"}\r\n                    parentHeight={'auto'}\r\n                    colorArray={this.colorArray} \r\n                    ordinalNumerals={this.ordinalNumerals}\r\n                    {...this.props}\r\n                />\r\n                <Link type=\"button\" className=\"ui blue mini button\" to={`${process.env.PUBLIC_URL}/`}><i className=\"arrow left icon\"></i>Back to Form</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ancestor:state.createTree[0]?.ancestor,\r\n        spouseName:state.createTree[0]?.spouseName,\r\n        children:state.createTree[0]?.children,\r\n        parentHeight:state.createTree[0]?.parentHeight,\r\n        genPxObject:state.createTree[0]?.generationPxRelation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Tree);","import React,{Fragment} from 'react'\r\n\r\nexport let Input = (...propsArr) => {\r\n    let [props] = propsArr;\r\n    let {input,labelProps,type,meta:{touched,error},autofocus,placeholder,inputClass} = props;\r\n    let {label,className} = labelProps;\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className={className}>{label}</div>\r\n        <input \r\n            {...input} \r\n            className={inputClass || null} \r\n            type={type} \r\n            autoFocus={autofocus} \r\n            placeholder={placeholder?placeholder:null}/>\r\n            {touched && ((error && <div className=\"ui left pointing red basic label\">{error}</div>))}\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function SelectInput(...props) {\r\n    let {input,labelProps:{label,className},DemoBoxDownPointer} = props[0];\r\n    return (\r\n        <div className=\"checkbox container\">\r\n            {DemoBoxDownPointer ? DemoBoxDownPointer : null}\r\n            <div className={className}>{label}</div>\r\n            <input {...input} type=\"checkbox\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n   ","import React from 'react';\r\nimport {Field,FieldArray} from 'redux-form';\r\n//components\r\nimport {Input} from '../ReusableComponents/Inputs';\r\nimport {SelectInput} from '../ReusableComponents/SelectInput';\r\n\r\nlet RenderFormChildren = (props) => {\r\n    //fields are associated with Field Array,  fieldArrayReduxProps\r\n    //are just the main group of props being passed all the way down,\r\n    //and required is the validate function passed down\r\n    let {fields,fieldArrayReduxProps,required,maxLength} = props; \r\n\r\n    let regEx = /\\[\\d+\\]/g;\r\n    let bracketArr = fields.name.match(regEx);\r\n\r\n    let addValidation = () => {\r\n        if(!fieldArrayReduxProps.valid || fieldArrayReduxProps.pristine){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    //button receives name associated with its parent array,  this is \r\n    //taken care of by the fieldValue state\r\n    let btnName = \"\"\r\n    for(let i = 0; i < fieldArrayReduxProps.fieldValue.length; i++){\r\n        if(fields.name === fieldArrayReduxProps.fieldValue[i].name){\r\n            btnName = fieldArrayReduxProps.fieldValue[i].value\r\n        }\r\n    }\r\n\r\n    let spouseState = (searchName) => {\r\n        for(let i = 0; i < fieldArrayReduxProps.spouseState.length; i++){\r\n            if(searchName === fieldArrayReduxProps.spouseState[i].name){\r\n                return fieldArrayReduxProps.spouseState[i].bool; \r\n            }\r\n        }\r\n        return false; \r\n    }\r\n\r\n    return (\r\n        <div className=\"ui list\" id=\"ul\">\r\n            {fields.map((child,index)=>{\r\n               return ( <div className=\"item\" id=\"item\" key={index}>\r\n                    <div className=\"inline field\" id=\"formChildrenRows\">\r\n                    <Field \r\n                        name={`${child}field`} \r\n                        component={Input} \r\n                        labelProps={{label:`${fieldArrayReduxProps.ordinalNumerals(index + 1)} Child`,className:\"ui purple horizontal label\"}} \r\n                        validate={[required,maxLength]}\r\n                        autofocus={true}\r\n                        inputClass={\"\"}\r\n                        inputReduxProps={fieldArrayReduxProps}\r\n                        //onChange event to capture input value and pass it into redux and back down to add child button\r\n                        onChange={(event, newValue, previousValue, name) => fieldArrayReduxProps.getFieldValue(`${child}arr`,newValue,fieldArrayReduxProps.fieldValue)} \r\n                        //Giving the field an ID so that I can sync its value to parent array(or component) and its add child button       \r\n                        ID={`${child}arr${index}`}\r\n                    />\r\n                    {spouseState(`${child}isSpouse`) &&\r\n                    <Field \r\n                        name={`${child}spouse`} \r\n                        validate={maxLength}\r\n                        component={Input} \r\n                        autofocus={true}\r\n                        labelProps={{label:`Spouse`,className:\"ui purple horizontal label spouseLabel\"}} \r\n                        inputReduxProps={fieldArrayReduxProps}\r\n                        placeholder={\"spouse\"}\r\n                    />}\r\n                    <Field \r\n                    component={SelectInput} \r\n                    name={`${child}isSpouse`} \r\n                    labelProps={{label:`${spouseState(`${child}isSpouse`)?'Remove Spouse':'Add Spouse'}`,className:\"ui basic mini label addSpouseLabel\"}} \r\n                    inputReduxProps={fieldArrayReduxProps}\r\n                    //anytime checkbox is selected onChange is called with values necessary to update state and use a boolean to determine\r\n                    //whether to render spouse Field component; passing newValue, name of Field component, and prevState to compare and update\r\n                    onChange={(event, newValue, previousValue, name)=>{\r\n                        if(newValue === false){\r\n                            fieldArrayReduxProps.clearFields(false,false,[`${child}spouse`]);\r\n                        }\r\n                        fieldArrayReduxProps.getSpouseState(newValue,name,fieldArrayReduxProps.spouseState)\r\n                    }\r\n                    }\r\n                    />\r\n                    <button type=\"button\" className=\"ui red mini button\" title=\"Remove Child Input\" onClick={()=>{\r\n                                fields.remove(index);\r\n                                fieldArrayReduxProps.clearFields(false,false,[`${child}field`,`${child}spouse`]);\r\n                                fieldArrayReduxProps.getSpouseState(false,`${child}isSpouse`,fieldArrayReduxProps.spouseState)\r\n                    }}>\r\n                        <i className=\"trash icon\"></i>\r\n                    </button>\r\n                    </div>\r\n                    {bracketArr?.length > 3 ? <div className=\"limitMessage\">No more than 5 generations</div>: <FieldArray \r\n                                                                                                                    name={`${child}arr`} \r\n                                                                                                                    component={RenderFormChildren}\r\n                                                                                                                    fieldArrayReduxProps={fieldArrayReduxProps}\r\n                                                                                                                    required={required}\r\n                                                                                                                    maxLength={maxLength}\r\n                                                                                                                    ID={`${child}arr`}\r\n                                                                                                                    />}\r\n                </div>);\r\n            })}\r\n             <button \r\n             className=\"tiny ui button olive\" \r\n             type=\"button\" \r\n             onClick={()=>fields.push({})} \r\n             disabled={addValidation()} \r\n            >\r\n             <i className=\"user plus icon\"></i>\r\n             { btnName ? `Add Child to ${btnName}` : `Add Child`}\r\n             </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderFormChildren;","import React from 'react'\r\n\r\nexport let Button = (...props) => {\r\n    let {type,className,text,disabled,onClick} = props[0];\r\n    return (\r\n    <button type={type} className={className} onClick={onClick} disabled={disabled}>{text}</button>\r\n    );\r\n}","import * as React from 'react';\r\n//css\r\nimport '../../../styles/FormComponents/helperComponents/DemoBoxLeftPointer.css'\r\n\r\nexport const DemoBoxLeftPointer = () => {\r\n    return (\r\n        <div className=\"demoBoxLeftPointer\">\r\n            <i className=\"hand point left outline big blue icon\" id=\"pointLeftHandDemoBox\"></i>\r\n            <div className=\"leftPointerMessage1\">\r\n                Start by entering the Ancestor of your Family Tree!\r\n            </div>\r\n            <div className=\"leftPointerMessage2\">\r\n                After you've entered your ancestor you may now add Children\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n//css\r\nimport '../../../styles/FormComponents/helperComponents/DemoBoxDownPointer.css'\r\n\r\nexport const DemoBoxDownPointer = () => {\r\n\r\n    return (\r\n        <div className=\"demoBoxDownPointer\">\r\n            <i className=\"hand point down outline big blue icon\" id=\"pointDownHandDemoBox\"></i>\r\n            <div className=\"downPointerMessage\">\r\n                Each field will have the option to add a Spouse if necessary\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { Component} from 'react';\r\nimport {Field,FieldArray} from 'redux-form';\r\n//components\r\nimport RenderFormChildren from './RenderFormChildren';\r\nimport {Button} from '../ReusableComponents/Button';\r\nimport {Input} from '../ReusableComponents/Inputs';\r\nimport {SelectInput} from '../ReusableComponents/SelectInput';  \r\nimport {DemoBoxLeftPointer} from './helperComponents/DemoBoxLeftPointer';\r\nimport {DemoBoxDownPointer} from './helperComponents/DemoBoxDownPointer';\r\n//css\r\nimport '../../styles/FormComponents/AncestorForm.css'\r\n   \r\nclass AncestorForm extends Component {\r\n\r\n    //validate function has to be declared outside of render or else it will create\r\n    //an infinite loop,  passed down through props to each component\r\n    required = value => value ? undefined : 'Required';\r\n\r\n    maxLength = max => value => value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n    maxLength50 = this.maxLength(50)\r\n\r\n    submitValidation = () => {\r\n        //form will display valid = true if all field level validators are satisfied\r\n        if(!this.props.valid || this.props.pristine){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    spouseState = (searchName) => {\r\n        for(let i = 0; i < this.props.spouseState.length; i++){\r\n            if(searchName === this.props.spouseState[i].name){\r\n                return this.props.spouseState[i].bool; \r\n            }\r\n        }\r\n        return false; \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <form className=\"ui form\" onSubmit={this.props.handleSubmit(this.props.onSubmit)} autoComplete=\"off\">\r\n            <div className=\"inline field\" id=\"ancestorChildren\">\r\n            <Field \r\n                name=\"ancestor\" \r\n                component={Input} \r\n                labelProps={{label:\"Ancestor\",className:\"ui purple horizontal label\"}} \r\n                validate={[this.required,this.maxLength50]}\r\n                type=\"text\"\r\n                autofocus={true}\r\n                inputClass={\"\"}\r\n                //try destructuring this.props down to only necessary data\r\n                inputReduxProps={this.props}\r\n                //event to capture input value and pass it into redux and back down to add child button\r\n                //leaving in unused parameters for reference; hard coding \"ancestorChildren\" b/c FieldArrays\r\n                //within RenderFormChildren component will be assigned different names for each array but \r\n                //this FieldArray had to be assigned manually b/c not in iteration; \r\n                onChange={(event, newValue, previousValue, name) => this.props.getFieldValue(\"ancestorChildren\",newValue,this.props.fieldValue)}\r\n                //Giving the field an ID so that I can sync its value with the add child button;  it doesn't really need an ID but all following\r\n                //input fields will need them to link their value to parent array(or component) and its add child button\r\n            />\r\n            {this.props.cancelIntro ? null : <DemoBoxLeftPointer/>}\r\n            {this.spouseState(\"isSpouse\") &&\r\n            <Field \r\n                //need to capitalize spouse?\r\n                name={`ancestorspouse`} \r\n                validate={this.maxLength50}\r\n                component={Input} \r\n                autofocus={true}\r\n                labelProps={{label:`Spouse`,className:\"ui purple horizontal label spouseLabel\"}} \r\n                inputReduxProps={this.props}\r\n                placeholder={\"spouse\"}\r\n            />}\r\n            <Field \r\n                component={SelectInput}\r\n                name=\"isSpouse\" \r\n                labelProps={{label:`${this.spouseState(\"isSpouse\")?'Remove Spouse':'Add Spouse'}`,className:\"ui basic mini label addSpouseLabel\"}} \r\n                inputReduxProps={this.props}\r\n                DemoBoxDownPointer={this.props.cancelIntro ? null : <DemoBoxDownPointer/>}\r\n                //anytime checkbox is selected onChange is called with values necessary to update state and use a boolean to determine\r\n                //whether to render spouse Field component\r\n                onChange={(event, newValue, previousValue, name)=>{\r\n                    if(newValue === false){\r\n                        this.props.clearFields(false,false,['ancestorspouse']);\r\n                    }\r\n                    this.props.getSpouseState(newValue,name,this.props.spouseState)\r\n                }}\r\n            />\r\n            </div>\r\n            <FieldArray \r\n                name=\"ancestorChildren\" \r\n                component={RenderFormChildren}\r\n                fieldArrayReduxProps={this.props}\r\n                required={this.required}\r\n                maxLength={this.maxLength50}\r\n                ID={\"ancestorChildren\"}\r\n            /> \r\n            <Button className=\"ui button primary\" disabled={this.submitValidation()} text={\"Submit\"}/>\r\n            <Button className=\"negative ui button\" onClick={this.props.reset} type={\"reset\"} text={\"Clear\"}/>\r\n        </form>\r\n        );\r\n    }\r\n}   \r\n\r\n\r\nexport default AncestorForm;","import React from 'react';\r\nimport '../../styles/IconTree.css';\r\n\r\nfunction IconTree(props) {\r\n    return (\r\n        <div className=\"treeIcons\">\r\n            <div className=\"parentIcons\">\r\n                <i className=\"user green icon\"></i>\r\n                <i className=\"user green icon\"></i>\r\n            </div>\r\n            <div className=\"childrenIcons\">\r\n                <i className=\"child green icon\"></i>\r\n                <i className=\"child icon\"></i>\r\n                <i className=\"child icon\"></i>\r\n            </div>\r\n            <div className=\"grandChildrenIcons\">\r\n                <div className=\"childrenIcons\">\r\n                    <i className=\"child green icon\"></i>\r\n                    <i className=\"child icon\"></i>\r\n                    <i className=\"child icon\"></i>\r\n                </div>\r\n                <div className=\"childrenIcons\">\r\n                    <i className=\"child green icon\"></i>\r\n                    <i className=\"child icon\"></i>\r\n                    <i className=\"child icon\"></i>\r\n                </div>\r\n                <div className=\"childrenIcons\">\r\n                    <i className=\"child green icon\"></i>\r\n                    <i className=\"child icon\"></i>\r\n                    <i className=\"child icon\"></i>\r\n                </div>\r\n            </div>\r\n        </div>       \r\n    );\r\n}\r\n\r\nexport default IconTree;","import React from 'react';\r\n//css\r\nimport '../../../styles/FormComponents/helperComponents/WelcomeMessage.css'\r\n\r\nexport const WelcomeMessage = (props) => {\r\n\r\n    return (\r\n        <div className=\"welcomeMessage\">\r\n            Welcome to Family Tree!\r\n        </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {reduxForm} from 'redux-form';\r\n//components\r\nimport AncestorForm from './AncestorForm';  \r\nimport IconTree from './IconTree';\r\nimport {WelcomeMessage} from './helperComponents/WelcomeMessage.js'\r\n//action creators\r\nimport {createTree} from '../../actions/index';\r\nimport {getFieldValue} from '../../actions/index';\r\nimport {getSpouseState} from '../../actions/index';\r\nimport {cancelIntroAnimation} from '../../actions/index'\r\n//css\r\nimport '../../styles/FormComponents/AncestorEnter.css';\r\n\r\nclass AncestorEnter extends Component {\r\n    //holds state for AncestorForm,RenderFormChildren\r\n\r\n    componentDidMount(){\r\n        if(window.sessionStorage.getItem(\"playAnimation\")) this.props.cancelIntroAnimation(); \r\n    }\r\n\r\n    onSubmit = (formValues) =>  {\r\n        //taking registered fields to create a count of each generation for page size and misc....\r\n        let fields = this.props.formData.enterAncestors.registeredFields; \r\n        this.props.createTree(formValues,fields)\r\n    };\r\n\r\n    //stop instructions on intro function\r\n    stopInstructions = () => {\r\n        window.sessionStorage.setItem(\"playAnimation\",\"no\")   \r\n        this.props.cancelIntroAnimation(); \r\n    }\r\n\r\n    ordinalNumerals = (n) => {\r\n        let s = [\"th\", \"st\", \"nd\", \"rd\"];\r\n        let v = n%100;\r\n       return n + (s[(v-20)%10] || s[v] || s[0]);\r\n      }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"ancestorEnter\">\r\n                <div className=\"formHeader\">\r\n                    <h1>Family Tree</h1>       \r\n                    <IconTree/>  \r\n                </div>\r\n                {this.props.cancelIntro ? null : <button \r\n                                                    type=\"button\" \r\n                                                    className=\"ui button blue tiny basic\" \r\n                                                    id=\"stopInstructionsBtn\" \r\n                                                    onClick={this.stopInstructions}>Hide Instructions\r\n                                                </button>}\r\n                {this.props.cancelIntro ? null : <WelcomeMessage/>}\r\n                <AncestorForm {...this.props} onSubmit={this.onSubmit} ordinalNumerals={this.ordinalNumerals}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps =  (state) => {\r\n    return {\r\n        cancelIntro: state.cancelIntro,\r\n        formData: state.form,\r\n        fieldValue:state.fieldValue,\r\n        spouseState:state.spouseState\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps,{createTree,getFieldValue,getSpouseState,cancelIntroAnimation})(reduxForm({form:'enterAncestors',destroyOnUnmount:false})(AncestorEnter));","import {CREATE_TREE} from './types';\r\nimport history from '../history';\r\n\r\nexport const createTree = (formValues) => {\r\n\r\n\r\nlet objArr = [];\r\n\r\nclass ObjConstructor{\r\n    constructor(name,spouseName,children,generation){\r\n        this.name = name;\r\n        this.spouseName = spouseName; \r\n        this.children = children;\r\n        this.generation = generation; \r\n    }\r\n}\r\n\r\nconst mappingFn = () => {\r\n    //start off by hard coding in values to objArr\r\n    objArr.push({ancestor:formValues[`ancestor`]});  \r\n    objArr[0].spouseName =formValues[`ancestorspouse`];\r\n\r\n     const arrIterator = (iterObj,generationArg) => {\r\n\r\n           if(!iterObj) return; \r\n           return iterObj.map((element)=>{\r\n            let currentGeneration = generationArg; \r\n            let generationCounter = generationArg; \r\n            let name = element[`field`];\r\n            let spouseName = element[`spouse`]  || undefined; \r\n            let children = element[`arr`] || undefined; \r\n\r\n            //if there are children that will be the next generation\r\n            if (children)  generationCounter+=1 \r\n\r\n                return (!children ? \r\n                        new ObjConstructor(name,spouseName,children,currentGeneration) : \r\n                        new ObjConstructor(name,spouseName,arrIterator(children,generationCounter),currentGeneration));\r\n        });//////  \r\n    }\r\n    //passing in what would be ancestorChildren named array on formValues;  also starting generation count at 1 since ancestor children are first generation\r\n    objArr[0].children = arrIterator(formValues[`ancestorChildren`],1); \r\n  \r\n  //adding generation prop and value after objArr was created and all iterations are done\r\n  objArr[0].generation =0;\r\n  return objArr[0]\r\n} \r\n\r\nlet newObj = mappingFn();\r\n\r\n\r\nhistory.push(`${process.env.PUBLIC_URL}/tree`);\r\n\r\nreturn {\r\n    type: CREATE_TREE,\r\n    payload: newObj\r\n}\r\n}","export const CREATE_TREE = 'CREATE_TREE';\r\nexport const GET_FIELD_VALUE = 'GET_FIELD_VALUE';\r\nexport const GET_SPOUSE_STATE = 'GET_SPOUSE_STATE';\r\nexport const CANCEL_INTRO_ANIMATION = 'CANCEL_INTRO_ANIMATION';","import {GET_FIELD_VALUE} from './types';\r\n\r\nexport const getFieldValue = (name,value,prevState) => {\r\n    //takes params to compare current field with name and value of previous state,\r\n    //either updates value for prevState that already exists or creates a new object\r\n    //with current fields name and value,  fired from onChange event; \r\n    function objConstructor (name,value) {\r\n        this.name = name;\r\n        this.value = value; \r\n    }\r\n\r\n    let prevStateIterator = () => {\r\n        for(let i = 0; i < prevState.length; i++){\r\n            if(prevState[i].name === name){\r\n                prevState[i].value = value;\r\n                return prevState; \r\n            }\r\n        }\r\n        prevState.push(new objConstructor(name,value));\r\n        return prevState; \r\n    }\r\n\r\n    let arr = prevStateIterator()\r\n\r\n    return {\r\n        type:GET_FIELD_VALUE,\r\n        payload: arr\r\n    }\r\n}","import {GET_SPOUSE_STATE} from './types'\r\n\r\nexport const getSpouseState = (bool,name,prevState) => {\r\n    function objConstructor(bool,name){\r\n        this.bool = bool;\r\n        this.name = name;\r\n    }\r\n\r\n    let prevStateIterator = () => {\r\n        for(let i = 0; i < prevState.length; i++){\r\n            if(prevState[i].name === name){\r\n                prevState[i].bool = bool;\r\n                return prevState; \r\n            }\r\n        }\r\n        prevState.push(new objConstructor(bool,name));\r\n        return prevState; \r\n    }\r\n\r\n    let arr = prevStateIterator()\r\n    return {\r\n        type: GET_SPOUSE_STATE,\r\n        payload: arr\r\n    }\r\n}","import {CANCEL_INTRO_ANIMATION} from './types'\r\n\r\nexport const cancelIntroAnimation = () => {\r\n    return {\r\n        type:CANCEL_INTRO_ANIMATION,\r\n        payload: true\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {Router,Route} from 'react-router-dom';\r\nimport history from './history';\r\n\r\nimport Tree from './components/TreeComponents/Tree';\r\nimport AncestorEnter from './components/FormComponents/AncestorEnter';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history} basename={`${process.env.PUBLIC_URL}/`}>\r\n        <Route exact path={`${process.env.PUBLIC_URL}/`} render={(routeProps)=><AncestorEnter {...routeProps}/>}/>\r\n        <Route exact path={`${process.env.PUBLIC_URL}/tree`} render={()=><Tree/>}/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport createTree from './createTree';\r\nimport getFieldValue from './getFieldValue';\r\nimport getSpouseState from './getSpouseState';\r\nimport cancelIntro from './cancelIntro';\r\n\r\nexport default combineReducers({\r\n    createTree,\r\n    cancelIntro,\r\n    form:formReducer,\r\n    fieldValue:getFieldValue,\r\n    spouseState:getSpouseState\r\n});","import {CREATE_TREE} from '../actions/types';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type){\r\n        case CREATE_TREE:\r\n            return [action.payload];\r\n        default:\r\n            return state\r\n    }\r\n}","import {CANCEL_INTRO_ANIMATION} from '../actions/types';\r\n\r\nexport default (state = false, action) => {\r\n    switch(action.type){\r\n        case CANCEL_INTRO_ANIMATION:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_FIELD_VALUE} from '../actions/types';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type){\r\n        case GET_FIELD_VALUE:\r\n            return [...action.payload];\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {GET_SPOUSE_STATE} from '../actions/types';\r\n\r\nexport default (state=[],action) => {\r\n    switch(action.type){\r\n        case GET_SPOUSE_STATE:\r\n            return [...action.payload];\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/scroll_right.7fe5c103.gif\";"],"sourceRoot":""}