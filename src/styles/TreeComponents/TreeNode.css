.isAncestor {
    display: flex;
    align-items: center;
    width: 100%;
    /* height: 100vh; */
    /* padding: auto 0; */
    /* flex-wrap: wrap;   */
    /* align-content: center; */
    min-height: 600px;
}
/* check back on this rule */
.isAncestor + .borderDiv {
    display: none;
}   

.isAncestor > .labelNameDiv {
    padding-left: 0;
    /* width: 160px; */
    padding-right: 4%;
}

/*this probably needs to be deleted h4*/
h4 {
    height: 100%;
    display: flex;
    justify-content: center;
    flex-direction: column;  
    /* width: 105px;  trying auto width for now*/
}

.labelNameDiv {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.isChildren .labelNameDiv {
    /* width: 221px; */
    /*border left position is also set to 14px*/
    padding-left: 14px;
    padding-right: 3%;
}

.childLabelDiv,.spouseLabelDiv {
    display: flex;
    align-items: center;
    min-width: 114px;
    padding: 3px 0;
}


.ui.header {
    margin: 0;
    /*2px gives h2 a little bit of space from label*/
    padding-left: 2px;
}

h4.ui.blue.header.treeh4 {
    white-space: nowrap;
}

.ui.horizontal.label {
    display: inline-block;
    min-width: 73px;
}

.isChildren{
    display: flex;
    justify-content: center;
    flex-direction: column;
    transition: opacity 500ms;
    /*this padding gives the final generation some padding from the right*/
    padding-right: 10px;
}

.hide{
    opacity: 0%;
}

.isAncestor .minimizer, .isChildren .minimizer {
    color: gray; 
    position: absolute;
    top: 50%; 
    z-index: 1001;
    left: -7px; 
    cursor: pointer;
}

.pointerDiv {
    width: 91px;
    /* background: red; */
    height: 3px;
    position: absolute;
    top: 50%;
    left: 130px;
    border-top: 3px solid #2196F3;
    /*debating whether to use this going to set to display none for now*/
    display: none;
}

.hasChildren{
    display: flex;
    flex-direction: row;
    align-items: center;
}

.noChildren {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.noChildren > .borderDiv {}

.parentToBorder {
    position: relative;
    padding: 30px 0;
}

.hasChildren{
    position: relative;
}

/*prong styling for absolute borders to create a branch of a tree design*/

.parentToBorder > .borderDiv {
    position: absolute;
    border-left:3px solid #2196F3;
    /* width is same as padding of labeDiv to butt up against */
    width: 14px;
    border-top:3px solid #2196F3;
    left: 0; 
    top: 50%; 
    height: 50%;
}


.lastChild > .borderDiv{
    height: 50%;
    border-top: none;
    width: 14px;
    left: 0; 
    position: absolute;
    /* border left is set to none or border would escape the prong design */
    border-left:3px solid #2196f3; 
    top: 0px;
    border-bottom: 3px solid #2196f3;
    border-top: none;
}

.noSiblings > .borderDiv {
    display: none;
}

.borderDiv2 {
    height: 50%;
    width: 14px;
    /* border: 1px solid black; */
    position: absolute;
    top: 0;
    border-bottom: none;
    border-left: 3px solid #2196f3;
}
